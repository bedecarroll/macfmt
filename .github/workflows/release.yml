name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: macfmt
            archive_name: macfmt-linux-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_name: macfmt
            archive_name: macfmt-linux-x86_64-musl
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: macfmt
            archive_name: macfmt-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: macfmt
            archive_name: macfmt-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: macfmt.exe
            archive_name: macfmt-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools (Linux musl only)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary
        run: cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} ${{ matrix.archive_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive_name }}
          path: ${{ matrix.archive_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts to release directory
        run: |
          mkdir -p release
          ls -la artifacts/
          find artifacts -type f \( -name "macfmt-*" \) -exec cp {} release/ \;
          ls -la release/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          generate_release_notes: true
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

